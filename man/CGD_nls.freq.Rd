% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CGD.R
\name{CGD$nls.freq}
\alias{CGD$nls.freq}
\title{度数分布による連続な連結ガウス分布構成}
\usage{
CGD$nls.freq(x, freq, total, start = NULL, control = list(),
                      set.by.start = FALSE, kind = NULL, normal = FALSE,
                      symmetric = FALSE, v.grad = FALSE, this.type1.type = NULL,
                      uni.sigma = FALSE, uni.mean = TRUE, ...)
}
\arguments{
\item{x}{X座標のベクトル。最低 3 個以上の要素を含み、昇順に並べておくこと。
また、値に重複がないようにすること。}

\item{freq}{X座標に対する度数分布のベクトル。要素数は x と同数であること。}

\item{total}{度数の合計。
前処理で除外された外れ値の数を合計に含めるかどうかは、
この関数の使用者の判断に委ねられる。そのため、この引数は省略できない。}

\item{start}{\link[stats]{nls} に渡す初期値のリスト (デフォルト: NULL)。
デフォルト (NULL) の場合は、
内部で各正規分布の平均値や局地的な標準偏差などをある程度計算して、
暫定的なパラメータを初期値とする。
もし、自分で初期値を与える場合は、
構成要素の正規分布の平均値 (mean または mean.1, mean.2, mean.3 または
mean.1.1, mean.1.2, mean.2.1, mean.2,2) と
標準偏差の平方根
 (sqrt.sd または sqrt.sd.1, sqrt.sd.2, sqrt.sd.3 または
  sqrt.sd.1.1, sqrt.sd.1.2, sqrt.sd.2.1, sqrt.sd.2.2)
をリストとして与えること。
なお、リストのテンプレートが
\link[cgd]{nls.start.template} で得られるので、
初期値は、そのテンプレートの各変数に与えてやればよい。}

\item{control}{\link[stats]{nls} に渡す設定。
詳細は \link[stats]{nls.control} を参照 (デフォルト: list())。}

\item{set.by.start}{\link[stats]{nls} を実行せず、
start の値をそのまま使って分布を構成するフラグ。
start の値は、引数で与えられた場合は、それをそのまま使い、
引数で与えられていない場合は、
内部で計算した暫定的な初期値を使う (デフォルト: FALSE)。}

\item{kind}{生成する分布の種類を特定する変数 (1要素のみ有効) (デフォルト: NULL)。
変数の種類は、 \link[cgd]{CGD} クラスオブジェクト か、
cgd:::kinds の要素の文字列か、またはそのインデックス番号が有効。
kind に NULL でない有効な引数を与えると、
以下の normal から uni.mean までの 6 個の引数は無視され、
kind で指定された分布の種類に沿うように、
それらのオプションの値が内部で決定される。}

\item{normal}{正規分布で近似するフラグ。
normal = TRUE にすると、
type1.type を除く以降の 4 個の引数は無視され、
結果の分布は正規分布になる。
type1.type は既設定値が
 (引数 type1.type が与えられていれば、その値を上書きした結果)
1 または 2 であればそのまま。
それ以外は 1 に設定される (デフォルト: FALSE)。}

\item{symmetric}{type1.type = 2, symmetric = TRUE で近似するフラグ。
symmetric = TRUE にすると、
this.type1.type, uni.sigma, uni.mean の引数は無視される
 (デフォルト: FALSE)。}

\item{v.grad}{type1.type = 3, v.grad = TRUE で近似するフラグ。
v.grad = TRUE にすると、
this.type1.type の引数は無視され、
type1.type = 3 に設定される (デフォルト: FALSE)}

\item{this.type1.type}{フィールドの type1.type に設定する値。
1、2、3、4 のいずれかを指定すること。
NULL の場合は type1.type の値を変更しない。
分布の種類は type1.type の設定値によって、
    1: 平均値が等しい2つの正規分布の平均
        (uni.sigma, uni.mean の設定は無効)、
    2: 横方向グラデーション、
    3:  (歪んだ) 縦方向グラデーション、
    4: 縦横グラデーション
となる (デフォルト: NULL)。
1、2、3、4 以外の数値を指定した場合はエラーになる。
本関数では、 type1.type = 0 は指定できない。}

\item{uni.sigma}{構成要素の正規分布の標準偏差をすべて等しくするかどうかのフラグ。
uni.sigma = TRUE にすると、
uni.mean の引数は無視され、 uni.mean = FALSE になる。
type1.type = 1 では無効 (デフォルト: FALSE)。}

\item{uni.mean}{構成要素の正規分布の平均値をすべて等しくするかどうかのフラグ。
type1.type = 1 では、 FALSE の設定は無効
 (注: 平均値が異なる2つの正規分布の平均は、
  本パッケージにおける不連続な連結ガウス分布の拡張にはならない)
 (デフォルト: TRUE)。}

\item{...}{その他、 \link[stats]{nls} の各引数を指定できる。
詳細は \link[stats]{nls} の Arguments を参照。}
}
\value{
\link[stats]{nls} の実行結果
}
\description{
非線形最小二乗法 (\link[stats]{nls}) によって、
与えられた度数分布に最も近くなるように、連続な連結ガウス分布を構成する。
}
\details{
この関数内では、度数分布の外れ値の除外は行わない。外れ値の除外は、必要に応じて、前処理で行うこと。
度数の合計 (total) に外れ値の分を含めるかどうかは、ライブラリの利用者の判断に委ねられる。
そのため、引数 total は省略できない。
}
\examples{
 ## preparing
 x <- seq( -2, 2, 0.2 )
 freq <- c( 15.164, 22.923, 25.134, 27.631, 37.239, 40.464,
         47.126, 79.469, 109.966, 118.241, 111.333, 78.674,
         46.921, 41.026, 36.975, 27.403, 25.493, 22.838,
         14.992, 11.468, 9.174 )
 total <- sum( freq )

 plot.freq.and.d <- function( a, x, freq, total )
 {
     xlim <- c( min( x ), max( x ) )
     ylim <- c( 0, max( cgd::get.d( x, freq, total ) ) * 1.2 )
     plot( x, cgd::get.d( x, freq, total ), xlim = xlim, ylim = ylim, xlab = "", ylab = "" )
     par( new = TRUE )
     plot( seq( min( x ), max( x ), 0.01 ), a$d( seq( min( x ), max( x ), 0.01 ) ),
     type = "l", xlim = xlim, ylim = ylim )
 }

 ## examples
 a <- CGD$new()
 a$nls.freq( x, freq, total, normal = TRUE )
 a
 plot.freq.and.d( a, x, freq, total )

 a$nls.freq( x, freq, total, this.type1.type = 1 )
 a
 plot.freq.and.d( a, x, freq, total )

 a$nls.freq( x, freq, total, this.type1.type = 2 )
 a
 plot.freq.and.d( a, x, freq, total )

 a$nls.freq( x, freq, total, this.type1.type = 3, uni.sigma = TRUE )
 a
 plot.freq.and.d( a, x, freq, total )

 a$nls.freq( x, freq, total,
             kind = "Median-Equaled Sigma-Differed Vertical Gradational Distribution" )
 a
 plot.freq.and.d( a, x, freq, total )

 a$nls.freq( x, freq, total, kind = 13, control = list( warnOnly = TRUE ) )
 a
 plot.freq.and.d( a, x, freq, total )

 ## you can set start parameters if you want
 start.list <- nls.start.template( a )
 start.list

 start.list$mean.1.1 <- -0.671
 start.list$mean.1.2 <- -0.198
 start.list$mean.2.1 <- 0.293
 start.list$mean.2.2 <- -0.198
 start.list$sqrt.sd <- sqrt( 0.640 )     ## sqrt.sd is the sqrt of the standard deviation.
 a$nls.freq( x, freq, total, kind = 13, start = start.list )
 a
 plot.freq.and.d( a, x, freq, total )

 a$nls.freq( x, freq, total, this.type1.type = 4, uni.mean = FALSE )
 a
 plot.freq.and.d( a, x, freq, total )
}
\seealso{
\link[stats]{nls}, \link[stats]{nls.control},
         \link[cgd]{nls.freq}, \link[cgd]{nls.freq.all}, \link[cgd]{nls.start.template}
}
